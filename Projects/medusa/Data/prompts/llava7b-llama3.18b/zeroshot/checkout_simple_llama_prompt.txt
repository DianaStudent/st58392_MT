You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and a textual description of UI screenshots for the 'checkout-simple' process.

html_data: {html_data}

screenshots_description: {screen_description}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure and visual layout.
URL: http://localhost:8000/dk
Rules:
- After adding a product to the cart, the test must click on the cart button (shopping bag) - Wait for presence of "GO TO CHECKOUT" button using html_data.
- Fill required checkout fields (e.g. email, phone, shipping address, Shipping, payment).
- After placing the order, the test must confirm that the final success page contains the text: "Your order was placed successfully".
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.