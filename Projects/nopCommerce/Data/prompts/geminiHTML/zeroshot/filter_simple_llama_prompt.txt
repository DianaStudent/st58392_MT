You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and  for the 'filter' process.

html_data: {html_data}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure .
Rules:
- Perform a product search using the query "book".
- Apply a price filter by navigating to a URL that includes the price parameter.
- Confirm success by checking that the resulting product grid is updated.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.