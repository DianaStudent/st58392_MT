You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and  for the 'ui' process.

html_data: {html_data}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure .
home:http://localhost:8080/en/
clothes:http://localhost:8080/en/3-clothes
accessories: http://localhost:8080/en/6-accessories
art:http://localhost:8080/en/9-art
login:http://localhost:8080/en/login?back=http%3A%2F%2Flocalhost%3A8080%2Fen%2F9-art
register:http://localhost:8080/en/registration

Rules:
- Check that the main UI components are present: headers, buttons, links, form fields, etc.
- Check that these elements exist and are visible.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.