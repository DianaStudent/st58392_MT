You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and  for the 'filter' process.

html_data: {html_data}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure .
Rules:
- Wait for the filter sidebar.
- Select a checkbox filter by its label text.
- Do not rely on dynamic ID values â€” use label or section attributes like data-name instead.
- After applying the filter, verify that the number of visible product items changes.
- Success is when the product count changes after applying and removing filters.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.