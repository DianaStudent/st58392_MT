You are an expert in Selenium automation. Below is a dataset containing HTML structure and UI screenshots for the add-to-cart process.
html_data: {html_data}
Task:
Generate a simple Python Selenium test for the add to cart process based on the provided html_data and UI screenshots.
URL: http://localhost:8080/en/
Test scenario:
1. Open the home page.
2. Click on a product category (e.g. from the top menu).
3. Select the first product listed in the category.
4. On the product detail page, click the "Add to cart" button.
5. Wait for the modal popup that confirms the product was added to the cart.
6. Verify the modal contains a message like "Product successfully added to your shopping cart".

Rules:
- Do not assume the mini-cart opens automatically — instead, confirm via modal.
- Wait for the modal (popup) confirmation to appear after adding to cart.
- Confirm success by verifying the presence of the modal title that contains "successfully added" or similar.
- Do not rely on dynamic ID values — use label or section attributes like data-name instead.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- Before asserting any element or text, check that it exists and is not empty.
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.