You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and a textual description of UI screenshots for the 'ui-simple' process.

html_data: {html_data}

screenshots_description: {screen_description}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure and visual layout.
home URL: http://localhost:3000
category_a URL: http://localhost:3000/category-a
category_a_1 URL: http://localhost:3000/category-a-1

Rules:
- Check that the main UI components are present: headers, buttons, links, form fields, etc.
- Check that these elements exist and are visible.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.