You are an expert in Selenium automation. Below is a dataset containing detailed HTML structure 
and a textual description of UI screenshots for the 'ui-medium' process.

html_data: {html_data}

screenshots_description: {screen_description}

Task:
Generate a Python Selenium test that strictly follows the described process using only elements from the HTML structure and visual layout.
home:http://localhost/
tables:http://localhost/category/tables
chairs:http://localhost/category/chairs
login:http://localhost/login
register:http://localhost/register
Test scenario:
1. Open the page.
2. Confirm the presence of key interface elements: navigation links, inputs, buttons, banners.
3. Interact with one or two elements â€” e.g., click a button and check that the UI updates visually.
4. Verify that interactive elements do not cause errors in the UI.
Rules:
- Check that the main UI components are present: headers, buttons, links, form fields, etc.
- Check that these elements exist and are visible.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.

Return only Python code using unittest.