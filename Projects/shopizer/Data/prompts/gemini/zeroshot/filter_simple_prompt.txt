You are an expert in Selenium automation. Below is a dataset containing HTML structure and UI screenshots for the product filter process.
html_data: {html_data}
Task:
Generate a simple Python Selenium test for the product filter process based on the provided html_data and UI screenshots.
URL: http://localhost/
Rules:
- Click on the filter tab.
- After filter is applied, check that at least one product is displayed.
- Success is when the product count changes after applying filters.
- Use webdriver-manager to manage ChromeDriver.
- Use selectors strictly from html_data.
- Use WebDriverWait with a timeout of 20 seconds before interacting with elements.
- Use unittest with setUp() and tearDown().
- If any required element is missing, fail the test using self.fail(...).
Return only Python code using unittest.
